一、阅读下面的代码段，回答后面的问题。

int a = 0, b = 0;
cin >> a >> b;
if (a == 1)
  if (b == 1)
    cout << "a == 1, b == 1" << endl;
else
  if (b == 1)
    cout << "a != 1, b == 1" << endl;
cout << "End" << endl;
① 输入 1 1 ，程序输出是什么？简单解释原因。
a == 1, b == 1
End
进入第一个 if (a == 1)，条件为真，执行其内部的 if (b == 1)，条件也为真，输出 "a == 1, b == 1"。
然后执行 cout << "End" << endl;，输出 "End"。
② 输入 0 1 ，程序输出是什么？简单解释原因。
End
无法进入第一个 if (a == 1)，直接执行 cout << "End" << endl;，输出 "End"。
③ 你能从中总结出什么规律或者编程的好习惯？
使用大括号 {} 明确范围，防止过早结束循环
二、阅读下面的代码段，回答后面的问题。

int a, b;
cin >> a >> b;
if (a == 1 && ++b == 1) // Condition 1
  cout << "Condition 1 satisfied" << endl;
if (a == 0 || ++b == 1) // Condition 2
  cout << "Condition 2 satisfied" << endl;
cout << "b = " << b << endl;
① 输入 1 0 ，程序输出是什么？简单解释原因。
Condition 1 satisfied
b = 2
a == 1 为真，++b 使 b 变为 1，++b == 1 为真，输出 "Condition 1 satisfied"。
a == 0 为假，++b 使 b 变为 2，++b == 2 为假，不输出 "Condition 2 satisfied"。
最后输出 b 的值为 2。
② 输入 0 0 ，程序输出是什么？简单解释原因。
Condition 2 satisfied
b = 1
a == 1 为假。短路，右侧的 ++b 不会被执行。b 仍然是 0。
a == 0 为真。短路，右侧的 ++b 不会被执行。b 仍然是 0。
输出 "Condition 2 satisfied"。
最后输出 b 的值为 0。
③ 你能从中总结出什么规律或者编程的好习惯？
避免在逻辑表达式中混合使用带有副作用的表达式
三、阅读下面的代码段，回答后面的问题。

int a;
cin >> a;
if (a < 0)
  cout << "(-∞, 0)" << endl;
else if (0 < a < 100)
  cout << "(0, 100)" << endl;
else
  cout << "(100, +∞)" << endl;
① 输入 -200 ，程序输出是什么？简单解释原因。
(-∞, 0)
 a 为 -200。第一个 if (a < 0) 条件为真，因此执行对应的输出语句，后续的 else if 和 else 被跳过。
② 输入 200 ，程序输出是什么？简单解释原因。
(0, 100)
if (a < 0) 为假。else if (0 < a < 100)被解析为 (0 < a) < 100。
(0 < a) 为真，转换为 1，1 < 100 恒为真，因此输出 "(0, 100)"。
③ 你能从中总结出什么规律或者编程的好习惯？
不能写链式比较，写&&
四、阅读下面的代码段，回答后面的问题。

int a, b;
cin >> a >> b;
// 判断a, b是否均落在区间(-∞, 0)∪(100, +∞)上
if( a < 0 || a > 100 && b < 0 || b > 100)
  cout << "True!" << endl;
else
  cout << "False!" << endl;
① 输入 -100 200 ，程序输出是什么？简单解释原因。
True!
表达式等价于 (a < 0) || (a > 100 && b < 0) || (b > 100)。a < 0 为真。
② 输入 -100 50 ，程序输出是什么？简单解释原因。
True!
表达式等价于 (a < 0) || (a > 100 && b < 0) || (b > 100)。a < 0 为真。
③ 输入 50 200 ，程序输出是什么？简单解释原因。
True!
表达式等价于 (a < 0) || (a > 100 && b < 0) || (b > 100)。b > 100为真。
④ 你能从中总结出什么规律或者编程的好习惯？
别装，该用括号用括号！！！